! function(t) {
    function s(o) {
        if (e[o]) return e[o].exports;
        var i = e[o] = { exports: {}, id: o, loaded: !1 };
        return t[o].call(i.exports, i, i.exports, s), i.loaded = !0, i.exports }
    var e = {};
    return s.m = t, s.c = e, s.p = "", s(0) }([function(t, s, e) {
    function o() { console.log("home.init"), i.init(), r.init(), $(".typed-js").typed({ strings: ["innovation.", "profit.", "possibility."], typeSpeed: 50, startDelay: 500, loop: !0, backSpeed: 50, backDelay: 1500, contentType: "text" }) }
    var i = e(10),
        r = e(11);
    e(12);
    $(o) }, function(t, s) { t.exports = jQuery }, , , , , , , , , function(t, s, e) {
    function o() { i(".js-autoscroll").on("click", function(t) {
            var s = i(i(this).data("autoscrollTarget"));
            i("html,body").animate({ scrollTop: s.offset().top }, "slow") }) }
    var i = e(1);
    t.exports = { init: o } }, function(t, s, e) {
    function o() {
        var t = i(".js-fade-carousel"),
            s = t.children(),
            e = 0,
            o = 0;
        e = setInterval(function() { o = ++o > s.length - 1 ? 0 : o, s.removeClass("active").eq(o).addClass("active") }, 7e3) }
    var i = e(1);
    t.exports = { init: o } }, function(t, s) {! function(t) { "use strict";
        var s = function(s, e) { this.el = t(s), this.options = t.extend({}, t.fn.typed.defaults, e), this.isInput = this.el.is("input"), this.attr = this.options.attr, this.showCursor = this.isInput ? !1 : this.options.showCursor, this.elContent = this.attr ? this.el.attr(this.attr) : this.el.text(), this.contentType = this.options.contentType, this.typeSpeed = this.options.typeSpeed, this.startDelay = this.options.startDelay, this.backSpeed = this.options.backSpeed, this.backDelay = this.options.backDelay, this.stringsElement = this.options.stringsElement, this.strings = this.options.strings, this.strPos = 0, this.arrayPos = 0, this.stopNum = 0, this.loop = this.options.loop, this.loopCount = this.options.loopCount, this.curLoop = 0, this.stop = !1, this.cursorChar = this.options.cursorChar, this.shuffle = this.options.shuffle, this.sequence = [], this.build() };
        s.prototype = { constructor: s, init: function() {
                var t = this;
                t.timeout = setTimeout(function() {
                    for (var s = 0; s < t.strings.length; ++s) t.sequence[s] = s;
                    t.shuffle && (t.sequence = t.shuffleArray(t.sequence)), t.typewrite(t.strings[t.sequence[t.arrayPos]], t.strPos) }, t.startDelay) }, build: function() {
                var s = this;
                if (this.showCursor === !0 && (this.cursor = t('<span class="typed-cursor">' + this.cursorChar + "</span>"), this.el.after(this.cursor)), this.stringsElement) { s.strings = [], this.stringsElement.hide();
                    var e = this.stringsElement.find("p");
                    t.each(e, function(e, o) { s.strings.push(t(o).html()) }) }
                this.init() }, typewrite: function(t, s) {
                if (this.stop !== !0) {
                    var e = Math.round(70 * Math.random()) + this.typeSpeed,
                        o = this;
                    o.timeout = setTimeout(function() {
                        var e = 0,
                            i = t.substr(s);
                        if ("^" === i.charAt(0)) {
                            var r = 1; /^\^\d+/.test(i) && (i = /\d+/.exec(i)[0], r += i.length, e = parseInt(i)), t = t.substring(0, s) + t.substring(s + r) }
                        if ("html" === o.contentType) {
                            var n = t.substr(s).charAt(0);
                            if ("<" === n || "&" === n) {
                                var a = "",
                                    u = "";
                                for (u = "<" === n ? ">" : ";"; t.substr(s).charAt(0) !== u;) a += t.substr(s).charAt(0), s++;
                                s++, a += u } }
                        o.timeout = setTimeout(function() {
                            if (s === t.length) {
                                if (o.options.onStringTyped(o.arrayPos), o.arrayPos === o.strings.length - 1 && (o.options.callback(), o.curLoop++, o.loop === !1 || o.curLoop === o.loopCount)) return;
                                o.timeout = setTimeout(function() { o.backspace(t, s) }, o.backDelay) } else { 0 === s && o.options.preStringTyped(o.arrayPos);
                                var e = t.substr(0, s + 1);
                                o.attr ? o.el.attr(o.attr, e) : o.isInput ? o.el.val(e) : "html" === o.contentType ? o.el.html(e) : o.el.text(e), s++, o.typewrite(t, s) } }, e) }, e) } }, backspace: function(t, s) {
                if (this.stop !== !0) {
                    var e = Math.round(70 * Math.random()) + this.backSpeed,
                        o = this;
                    o.timeout = setTimeout(function() {
                        if ("html" === o.contentType && ">" === t.substr(s).charAt(0)) {
                            for (var e = "";
                                "<" !== t.substr(s).charAt(0);) e -= t.substr(s).charAt(0), s--;
                            s--, e += "<" }
                        var i = t.substr(0, s);
                        o.attr ? o.el.attr(o.attr, i) : o.isInput ? o.el.val(i) : "html" === o.contentType ? o.el.html(i) : o.el.text(i), s > o.stopNum ? (s--, o.backspace(t, s)) : s <= o.stopNum && (o.arrayPos++, o.arrayPos === o.strings.length ? (o.arrayPos = 0, o.shuffle && (o.sequence = o.shuffleArray(o.sequence)), o.init()) : o.typewrite(o.strings[o.sequence[o.arrayPos]], s)) }, e) } }, shuffleArray: function(t) {
                var s, e, o = t.length;
                if (o)
                    for (; --o;) e = Math.floor(Math.random() * (o + 1)), s = t[e], t[e] = t[o], t[o] = s;
                return t }, reset: function() {
                var t = this;
                clearInterval(t.timeout);
                var s = this.el.attr("id");
                this.el.after('<span id="' + s + '"/>'), this.el.remove(), "undefined" != typeof this.cursor && this.cursor.remove(), t.options.resetCallback() } }, t.fn.typed = function(e) {
            return this.each(function() {
                var o = t(this),
                    i = o.data("typed"),
                    r = "object" == typeof e && e;
                i || o.data("typed", i = new s(this, r)), "string" == typeof e && i[e]() }) }, t.fn.typed.defaults = { strings: ["These are the default values...", "You know what you should do?", "Use your own!", "Have a great day!"], stringsElement: null, typeSpeed: 0, startDelay: 0, backSpeed: 0, shuffle: !1, backDelay: 500, loop: !1, loopCount: !1, showCursor: !0, cursorChar: "|", attr: null, contentType: "html", callback: function() {}, preStringTyped: function() {}, onStringTyped: function() {}, resetCallback: function() {} } }(window.jQuery) }]);
